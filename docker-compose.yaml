version: "3"

services:
  redis:
    image: redis:latest
    restart: on-failure
    env_file:
      - .env
    expose:
      - "6379"

  db:
    image: postgres:latest
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

    healthcheck:
      test: ["CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER"]
      interval: 10s
      retries: 5
      timeout: 5s
  app:
    build: .
    tty: true
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: sh -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000 && python3 manage.py"

    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app

  celery:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    command: celery -A config worker -l INFO
    depends_on:
      - redis
      - db
      - app

    volumes:
      - .:/app

  celery-beat:
    build: .
    tty: true
    restart: on-failure
    env_file:
      - .env
    command: celery -A config beat -l INFO
    depends_on:
      - redis
      - db
      - app

    volumes:
      - .:/app





volumes:
  pg_data:


